<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
 
 	<!-- Spring will search in the below paths for controller and service annotations -->
	<context:component-scan base-package="com.has.controller" />
	
	<mvc:annotation-driven />
	<mvc:default-servlet-handler/>
 
 	<!-- View resolvers can also be configured with ResourceBundles or XML files. 
		If you need different view resolving based on Locale, you have to use the 
		resource bundle resolver. -->
 	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="viewClass"  value="org.springframework.web.servlet.view.JstlView" />  
		<property name="prefix" value="/WEB-INF/jsp/" /> 
		<property name="suffix" value=".jsp" /> 
	</bean>
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- E-Mail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="gerardo.figueroa@has.hc.edu.tw" />
        <property name="password" value="" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>
    
    <!-- Interceptors -->
    <mvc:interceptors>
	    <bean class="com.has.util.ViewNameInModelInterceptor" />
	</mvc:interceptors>
 
</beans>